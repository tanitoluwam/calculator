{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/projects/calculator/calculator/src/components/keypad/Keypad.js\";\nimport React from \"react\";\nimport { Button } from \"../button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numericKeys = [7, 8, 9, 4, 5, 6, 1, 2, 3];\nconst operatorKeys = [{\n  label: \"÷\",\n  value: \"/\"\n}, {\n  label: \"×\",\n  value: \"x\"\n}, {\n  label: \"-\",\n  value: \"-\"\n}, {\n  label: \"+\",\n  value: \"+\"\n}, {\n  label: \"=\",\n  value: \"=\"\n}];\nconst functionKeys = [{\n  label: allClear ? \"AC\" : \"C\",\n  value: allClear ? \"AC\" : \"C\"\n}, {\n  label: \"±\",\n  value: \"+/-\"\n}, {\n  label: \"%\",\n  value: \"%\"\n}];\nconst lastRowKeys = [{\n  label: \"0\",\n  value: \"0\",\n  type: \"numeric\",\n  buttonStyle: \"numeric-key special\"\n}, {\n  label: \"·\",\n  value: \".\",\n  type: \"fx\",\n  buttonStyle: \"numeric-key\"\n}];\nexport const Keypad = props => {\n  const {\n    actionToPerform,\n    allClear\n  } = props;\n\n  const handleClickButton = (value, keyType) => {\n    actionToPerform(value, keyType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"keypad\",\n    className: \"flex row jc-sp-around\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [functionKeys.map(functionKey => /*#__PURE__*/_jsxDEV(Button, {\n        label: functionKey.label,\n        value: functionKey.value,\n        buttonStyle: \"fx-key\",\n        onClick: handleClickButton,\n        type: \"fx\"\n      }, functionKey.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), numericKeys.map(numericKey => /*#__PURE__*/_jsxDEV(Button, {\n        label: numericKey,\n        value: numericKey,\n        buttonStyle: \"numeric-key\",\n        onClick: handleClickButton,\n        type: \"numeric\"\n      }, numericKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), lastRowKeys.map(lastRowKey => /*#__PURE__*/_jsxDEV(Button, {\n        label: lastRowKey.label,\n        value: lastRowKey.value,\n        buttonStyle: lastRowKey.buttonStyle,\n        onClick: handleClickButton,\n        type: lastRowKey.type\n      }, lastRowKey.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex column jc-sp-btw\",\n      children: operatorKeys.map(operatorKey => /*#__PURE__*/_jsxDEV(Button, {\n        label: operatorKey.label,\n        value: operatorKey.value,\n        buttonStyle: \"op-key\",\n        onClick: handleClickButton,\n        type: \"operator\"\n      }, operatorKey.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = Keypad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keypad\");","map":{"version":3,"names":["React","Button","numericKeys","operatorKeys","label","value","functionKeys","allClear","lastRowKeys","type","buttonStyle","Keypad","props","actionToPerform","handleClickButton","keyType","map","functionKey","numericKey","lastRowKey","operatorKey"],"sources":["/Users/apple/Desktop/projects/calculator/calculator/src/components/keypad/Keypad.js"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"../button/Button\";\n\nconst numericKeys = [7, 8, 9, 4, 5, 6, 1, 2, 3];\n\nconst operatorKeys = [\n  { label: \"÷\", value: \"/\" },\n  { label: \"×\", value: \"x\" },\n  { label: \"-\", value: \"-\" },\n  { label: \"+\", value: \"+\" },\n  { label: \"=\", value: \"=\" },\n];\n\nconst functionKeys = [\n  { label: allClear ? \"AC\" : \"C\", value: allClear ? \"AC\" : \"C\" },\n  { label: \"±\", value: \"+/-\" },\n  { label: \"%\", value: \"%\" },\n];\n\nconst lastRowKeys = [\n  {\n    label: \"0\",\n    value: \"0\",\n    type: \"numeric\",\n    buttonStyle: \"numeric-key special\",\n  },\n  { label: \"·\", value: \".\", type: \"fx\", buttonStyle: \"numeric-key\" },\n];\n\nexport const Keypad = (props) => {\n  const { actionToPerform, allClear } = props;\n\n  const handleClickButton = (value, keyType) => {\n    actionToPerform(value, keyType);\n  };\n  \n  return (\n    <div id=\"keypad\" className=\"flex row jc-sp-around\">\n      <div className=\"grid\">\n        {functionKeys.map((functionKey) => (\n          <Button\n            key={functionKey.label}\n            label={functionKey.label}\n            value={functionKey.value}\n            buttonStyle=\"fx-key\"\n            onClick={handleClickButton}\n            type=\"fx\"\n          />\n        ))}\n        {numericKeys.map((numericKey) => (\n          <Button\n            key={numericKey}\n            label={numericKey}\n            value={numericKey}\n            buttonStyle=\"numeric-key\"\n            onClick={handleClickButton}\n            type=\"numeric\"\n          />\n        ))}\n        {lastRowKeys.map((lastRowKey) => (\n          <Button\n            key={lastRowKey.label}\n            label={lastRowKey.label}\n            value={lastRowKey.value}\n            buttonStyle={lastRowKey.buttonStyle}\n            onClick={handleClickButton}\n            type={lastRowKey.type}\n          />\n        ))}\n      </div>\n      <div className=\"flex column jc-sp-btw\">\n        {operatorKeys.map((operatorKey) => (\n          <Button\n            key={operatorKey.label}\n            label={operatorKey.label}\n            value={operatorKey.value}\n            buttonStyle=\"op-key\"\n            onClick={handleClickButton}\n            type=\"operator\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}