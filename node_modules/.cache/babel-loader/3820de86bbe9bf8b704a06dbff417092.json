{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nconst initialPayload = {\n  result: 0,\n  currentInput: 0,\n  oldInput: 0,\n  action: null\n};\nexport const useCalculator = () => {\n  _s();\n\n  const [calc, setCalc] = React.useState(initialPayload);\n  const arithmeticOperations = [\"*\", \"/\", \"+\", \"-\"];\n  const {\n    currentInput,\n    oldInput\n  } = calc;\n\n  const subtractNumbers = label => {\n    if (oldInput !== 0 && currentInput !== 0) {\n      setCalc({ ...calc,\n        currentInput: oldInput - currentInput,\n        action: \"subtract\",\n        result: oldInput - currentInput\n      });\n    } else {\n      setCalc({ ...calc,\n        action: \"subtract\"\n      });\n    }\n  };\n\n  const multiplyNumbers = action => {\n    setCalc({ ...calc,\n      action,\n      oldInput: parseInt(calc.currentInput) * parseInt(calc.oldInput),\n      result: parseInt(calc.currentInput) * parseInt(calc.oldInput)\n    });\n  };\n\n  const divideNumbers = () => {\n    setCalc({ ...calc,\n      action,\n      oldInput: parseInt(calc.currentInput) / parseInt(calc.oldInput),\n      result: parseInt(calc.currentInput) / parseInt(calc.oldInput)\n    });\n  };\n\n  const selectNumbers = label => {\n    var _calc$action;\n\n    if ((_calc$action = calc.action) !== null && _calc$action !== void 0 && _calc$action.length) {\n      setCalc({ ...calc,\n        oldInput: currentInput,\n        currentInput: Number(`${calc.currentInput}${label}`)\n      });\n    } else {\n      setCalc({ ...calc,\n        currentInput: Number(`${calc.currentInput}${label}`)\n      });\n    }\n  };\n\n  const clearNumbers = () => {\n    setCalc(initialPayload);\n  };\n\n  const finalResult = action => {\n    if (\"add\") {\n      setCalc({ ...calc,\n        result: Number(calc.oldInput) + Number(calc.currentInput)\n      });\n    } else if (\"subtract\") {\n      setCalc({ ...calc,\n        result: Number(calc.oldInput) - Number(calc.currentInput)\n      });\n    } else if (\"multiply\") {\n      setCalc({ ...calc,\n        result: Number(calc.oldInput) * Number(calc.currentInput)\n      });\n    } else if (\"divide\") {\n      setCalc({ ...calc,\n        result: Number(calc.oldInput) / Number(calc.currentInput)\n      });\n    }\n  };\n\n  return {\n    subtractNumbers,\n    multiplyNumbers,\n    divideNumbers,\n    selectNumbers,\n    clearNumbers,\n    finalResult,\n    calc\n  };\n};\n\n_s(useCalculator, \"EK8lsIQp+X3Y5dScHDdt7tOQV3E=\");","map":{"version":3,"names":["React","initialPayload","result","currentInput","oldInput","action","useCalculator","calc","setCalc","useState","arithmeticOperations","subtractNumbers","label","multiplyNumbers","parseInt","divideNumbers","selectNumbers","length","Number","clearNumbers","finalResult"],"sources":["/Users/apple/Desktop/projects/calculator/calculator/src/hook/useCalculator.js"],"sourcesContent":["import React from \"react\";\n\nconst initialPayload = {\n  result: 0,\n  currentInput: 0,\n  oldInput: 0,\n  action: null,\n};\nexport const useCalculator = () => {\n  const [calc, setCalc] = React.useState(initialPayload);\n  const arithmeticOperations = [\"*\", \"/\", \"+\", \"-\"];\n\n  const { currentInput, oldInput } = calc;\n\n  const subtractNumbers = (label) => {\n    if (oldInput !== 0 && currentInput !== 0) {\n      setCalc({\n        ...calc,\n        currentInput: oldInput - currentInput,\n        action: \"subtract\",\n        result: oldInput - currentInput,\n      });\n    } else {\n      setCalc({\n        ...calc,\n        action: \"subtract\",\n      });\n    }\n  };\n  const multiplyNumbers = (action) => {\n    setCalc({\n      ...calc,\n      action,\n      oldInput: parseInt(calc.currentInput) * parseInt(calc.oldInput),\n      result: parseInt(calc.currentInput) * parseInt(calc.oldInput),\n    });\n  };\n\n  const divideNumbers = () => {\n    setCalc({\n      ...calc,\n      action,\n      oldInput: parseInt(calc.currentInput) / parseInt(calc.oldInput),\n      result: parseInt(calc.currentInput) / parseInt(calc.oldInput),\n    });\n  };\n\n  const selectNumbers = (label) => {\n    if (calc.action?.length) {\n      setCalc({\n        ...calc,\n        oldInput: currentInput,\n        currentInput: Number(`${calc.currentInput}${label}`),\n      });\n    } else {\n      setCalc({\n        ...calc,\n        currentInput: Number(`${calc.currentInput}${label}`),\n      });\n    }\n  };\n  const clearNumbers = () => {\n    setCalc(initialPayload);\n  };\n  const finalResult = (action) => {\n    if (\"add\") {\n      setCalc({\n        ...calc,\n        result: Number(calc.oldInput) + Number(calc.currentInput),\n      });\n    } else if (\"subtract\") {\n      setCalc({\n        ...calc,\n        result: Number(calc.oldInput) - Number(calc.currentInput),\n      });\n    } else if (\"multiply\") {\n      setCalc({\n        ...calc,\n        result: Number(calc.oldInput) * Number(calc.currentInput),\n      });\n    } else if (\"divide\") {\n      setCalc({\n        ...calc,\n        result: Number(calc.oldInput) / Number(calc.currentInput),\n      });\n    }\n  };\n\n  return {\n    subtractNumbers,\n    multiplyNumbers,\n    divideNumbers,\n    selectNumbers,\n    clearNumbers,\n    finalResult,\n    calc,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}