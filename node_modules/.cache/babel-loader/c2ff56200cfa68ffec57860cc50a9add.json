{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/projects/calculator/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { OutputScreen } from \"./components/outputScreen/OutputScreen\";\nimport { Button } from \"./components/button/Button\";\nimport { useCalculator } from \"./hook/useCalculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numericKeys = [7, 8, 9, 4, 5, 6, 1, 2, 3];\nconst operatorKeys = [{\n  label: \"÷\",\n  value: \"/\"\n}, {\n  label: \"×\",\n  value: \"x\"\n}, {\n  label: \"-\",\n  value: \"-\"\n}, {\n  label: \"+\",\n  value: \"+\"\n}, {\n  label: \"=\",\n  value: \"=\"\n}];\nconst functionKeys = [{\n  label: allClear ? \"AC\" : \"C\",\n  value: allClear ? \"AC\" : \"C\"\n}, {\n  label: \"±\",\n  value: \"+/-\"\n}, {\n  label: \"%\",\n  value: \"%\"\n}];\nconst lastRowKeys = [{\n  label: \"0\",\n  value: \"0\",\n  type: \"numeric\",\n  buttonStyle: \"numeric-key special\"\n}, {\n  label: \"·\",\n  value: \".\",\n  type: \"fx\",\n  buttonStyle: \"numeric-key\"\n}];\n\nfunction App() {\n  _s();\n\n  const {\n    handleActionToPerform,\n    accValue,\n    screenValue,\n    expectsOperand\n  } = useCalculator();\n\n  const handleBtnClick = label => {\n    switch (label) {\n      case \"-\":\n        subtractNumbers(label);\n        break;\n\n      case \"+\":\n        addNumbers(label);\n        break;\n\n      case \"*\":\n        multiplyNumbers(label);\n        break;\n\n      case \"/\":\n        divideNumbers(label);\n        break;\n\n      case \"=\":\n        finalResult(label);\n        break;\n\n      case \"c\":\n        clearNumbers();\n        break;\n\n      case \".\":\n        addDecimal();\n        break;\n\n      default:\n        selectNumbers(label);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App h-screen flex justify-center items-center flex-col bg-slate-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary h-auto w-1/4 border rounded-xl px-8 py-20\",\n      children: [/*#__PURE__*/_jsxDEV(OutputScreen, {\n        value: screenValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-4 mt-10\",\n        children: calcButtons.flat().map(_ref => {\n          let {\n            label,\n            action,\n            variant\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Button, {\n            label: label,\n            variant: variant || \"secondary\",\n            onClick: () => handleBtnClick(label, action)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f9SWdpn2o1Af9RH/9A5G2HwCqPI=\", false, function () {\n  return [useCalculator];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["OutputScreen","Button","useCalculator","numericKeys","operatorKeys","label","value","functionKeys","allClear","lastRowKeys","type","buttonStyle","App","handleActionToPerform","accValue","screenValue","expectsOperand","handleBtnClick","subtractNumbers","addNumbers","multiplyNumbers","divideNumbers","finalResult","clearNumbers","addDecimal","selectNumbers","calcButtons","flat","map","action","variant"],"sources":["/Users/apple/Desktop/projects/calculator/calculator/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { OutputScreen } from \"./components/outputScreen/OutputScreen\";\nimport { Button } from \"./components/button/Button\";\nimport { useCalculator } from \"./hook/useCalculator\";\n\nconst numericKeys = [7, 8, 9, 4, 5, 6, 1, 2, 3];\n\nconst operatorKeys = [\n  { label: \"÷\", value: \"/\" },\n  { label: \"×\", value: \"x\" },\n  { label: \"-\", value: \"-\" },\n  { label: \"+\", value: \"+\" },\n  { label: \"=\", value: \"=\" },\n];\n\nconst functionKeys = [\n  { label: allClear ? \"AC\" : \"C\", value: allClear ? \"AC\" : \"C\" },\n  { label: \"±\", value: \"+/-\" },\n  { label: \"%\", value: \"%\" },\n];\n\nconst lastRowKeys = [\n  {\n    label: \"0\",\n    value: \"0\",\n    type: \"numeric\",\n    buttonStyle: \"numeric-key special\",\n  },\n  { label: \"·\", value: \".\", type: \"fx\", buttonStyle: \"numeric-key\" },\n];\n\nfunction App() {\n  const { handleActionToPerform, accValue, screenValue, expectsOperand } =\n    useCalculator();\n\n  const handleBtnClick = (label) => {\n    switch (label) {\n      case \"-\":\n        subtractNumbers(label);\n        break;\n      case \"+\":\n        addNumbers(label);\n        break;\n      case \"*\":\n        multiplyNumbers(label);\n        break;\n      case \"/\":\n        divideNumbers(label);\n        break;\n      case \"=\":\n        finalResult(label);\n        break;\n      case \"c\":\n        clearNumbers();\n        break;\n      case \".\":\n        addDecimal();\n        break;\n      default:\n        selectNumbers(label);\n    }\n  };\n\n  return (\n    <div className=\"App h-screen flex justify-center items-center flex-col bg-slate-100\">\n      <div className=\"bg-primary h-auto w-1/4 border rounded-xl px-8 py-20\">\n        <OutputScreen value={screenValue} />\n        <div className=\"grid grid-cols-4 gap-4 mt-10\">\n          {calcButtons.flat().map(({ label, action, variant }) => {\n            return (\n              <Button\n                label={label}\n                key={label}\n                variant={variant || \"secondary\"}\n                onClick={() => handleBtnClick(label, action)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}