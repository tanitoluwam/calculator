{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/projects/calculator/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Keypad } from \"./components/keypad/Keypad\";\nimport { OutputScreen } from \"./components/outputScreen/OutputScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [accValue, setAccValue] = useState(null);\n  const [screenValue, setScreenValue] = useState(\"0\");\n  const [currentOperator, setCurrentOperator] = useState(null);\n  const [expectsOperand, setExpectsOperand] = useState(false);\n\n  const allClear = () => {\n    setAccValue(null);\n    setScreenValue(\"0\");\n    setCurrentOperator(null);\n    setExpectsOperand(false);\n  };\n\n  const clearScreen = () => {\n    setScreenValue(\"0\");\n  };\n\n  const handleClickFunctionKey = value => {\n    switch (value) {\n      case \"AC\":\n        allClear();\n        break;\n\n      case \"C\":\n        clearScreen();\n        break;\n\n      case \"%\":\n        percentage();\n        break;\n\n      case \".\":\n        addDecimalPoint();\n        break;\n    }\n  };\n\n  const handleActionToPerform = (value, keyType) => {\n    switch (keyType) {\n      case \"fx\":\n        handleClickFunctionKey(value);\n        break;\n\n      case \"numeric\":\n        handleClickNumericKey(value);\n        break;\n\n      case \"operator\":\n        handleClickOperator(value);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calculator-view\",\n    className: \"flex column jc-center ai-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viewport\",\n      className: \"flex column jc-sp-between ai-center\",\n      children: [/*#__PURE__*/_jsxDEV(OutputScreen, {\n        value: screenValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n        actionToPerform: handleActionToPerform,\n        allClear: isScreenClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5K/8jSM1YzCatua9WIAzhtHle0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Keypad","OutputScreen","App","accValue","setAccValue","screenValue","setScreenValue","currentOperator","setCurrentOperator","expectsOperand","setExpectsOperand","allClear","clearScreen","handleClickFunctionKey","value","percentage","addDecimalPoint","handleActionToPerform","keyType","handleClickNumericKey","handleClickOperator","isScreenClear"],"sources":["/Users/apple/Desktop/projects/calculator/calculator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Keypad } from \"./components/keypad/Keypad\";\nimport { OutputScreen } from \"./components/outputScreen/OutputScreen\";\n\nconst App = () => {\n  const [accValue, setAccValue] = useState(null);\n  const [screenValue, setScreenValue] = useState(\"0\");\n  const [currentOperator, setCurrentOperator] = useState(null);\n  const [expectsOperand, setExpectsOperand] = useState(false);\n\n  const allClear = () => {\n    setAccValue(null);\n    setScreenValue(\"0\");\n    setCurrentOperator(null);\n    setExpectsOperand(false);\n }\n\n const clearScreen = () => {\n  setScreenValue(\"0\");\n}\n\n  const handleClickFunctionKey = (value) => {\n    switch (value) {\n      case \"AC\":\n        allClear();\n        break;\n      case \"C\":\n        clearScreen();\n        break;\n      case \"%\":\n        percentage();\n        break;\n      case \".\":\n        addDecimalPoint();\n        break;\n    }\n  };\n\n  const handleActionToPerform = (value, keyType) => {\n    switch (keyType) {\n      case \"fx\":\n        handleClickFunctionKey(value);\n        break;\n      case \"numeric\":\n        handleClickNumericKey(value);\n        break;\n      case \"operator\":\n        handleClickOperator(value);\n        break;\n    }\n  };\n  return (\n    <div id=\"calculator-view\" className={\"flex column jc-center ai-center\"}>\n      <div id=\"viewport\" className={\"flex column jc-sp-between ai-center\"}>\n        <OutputScreen value={screenValue} />\n        <Keypad\n          actionToPerform={handleActionToPerform}\n          allClear={isScreenClear}\n        />\n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,YAAT,QAA6B,wCAA7B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,GAAD,CAA9C;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,IAAD,CAAtD;EACA,MAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;;EAEA,MAAMY,QAAQ,GAAG,MAAM;IACrBP,WAAW,CAAC,IAAD,CAAX;IACAE,cAAc,CAAC,GAAD,CAAd;IACAE,kBAAkB,CAAC,IAAD,CAAlB;IACAE,iBAAiB,CAAC,KAAD,CAAjB;EACF,CALA;;EAOD,MAAME,WAAW,GAAG,MAAM;IACzBN,cAAc,CAAC,GAAD,CAAd;EACD,CAFA;;EAIC,MAAMO,sBAAsB,GAAIC,KAAD,IAAW;IACxC,QAAQA,KAAR;MACE,KAAK,IAAL;QACEH,QAAQ;QACR;;MACF,KAAK,GAAL;QACEC,WAAW;QACX;;MACF,KAAK,GAAL;QACEG,UAAU;QACV;;MACF,KAAK,GAAL;QACEC,eAAe;QACf;IAZJ;EAcD,CAfD;;EAiBA,MAAMC,qBAAqB,GAAG,CAACH,KAAD,EAAQI,OAAR,KAAoB;IAChD,QAAQA,OAAR;MACE,KAAK,IAAL;QACEL,sBAAsB,CAACC,KAAD,CAAtB;QACA;;MACF,KAAK,SAAL;QACEK,qBAAqB,CAACL,KAAD,CAArB;QACA;;MACF,KAAK,UAAL;QACEM,mBAAmB,CAACN,KAAD,CAAnB;QACA;IATJ;EAWD,CAZD;;EAaA,oBACE;IAAK,EAAE,EAAC,iBAAR;IAA0B,SAAS,EAAE,iCAArC;IAAA,uBACE;MAAK,EAAE,EAAC,UAAR;MAAmB,SAAS,EAAE,qCAA9B;MAAA,wBACE,QAAC,YAAD;QAAc,KAAK,EAAET;MAArB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QACE,eAAe,EAAEY,qBADnB;QAEE,QAAQ,EAAEI;MAFZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA1DD;;GAAMnB,G;;KAAAA,G;AA2DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}